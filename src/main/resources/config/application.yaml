spring:
  config:
    activate:
      on-profile: dev

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
logging:
  config: classpath:logback-spring.xml

server:
  port: 8090
  undertow:
    accesslog:
      enabled: false

management:
  endpoints:
    web.exposure.include: info, health, prometheus
    enabled-by-default: false
  endpoint:
    info:
      enabled: true
    health:
      enabled: true
      show-details: always
    prometheus:
      enabled: true


########## CHAT MODELS ##########

langchain4j:
  chat-model:
    provider: openai
    # OpenAI - openai
    openai:
      api-key: x
      model-name: gpt-4o
      temperature: 0.0
      top-p: 1.0
      max-tokens: 100
      presence-penalty: 0.0
      frequency-penalty: 0.0
      max-retries: 3
      log-requests: true
      log-responses: true
  dalle3:
    api-key: x


##### AWS S3 & SQS #####
aws:
  s3:
    accessKey: x
    secretKey: x
    region: us-east-1
    endpoint: https://s3.us-east-1.amazonaws.com
    bucketName: simplify-ai-complexity
  sqs:
    accessKey: x
    secretKey: x
    region: us-east-1
    consumer:
      endpoint: https://sqs.us-east-1.amazonaws.com/592036762652/simplify_ai_complexity
      maxNumberOfMessagesToReceive: 10
      waitTimeSeconds: 20


##### Processing #####
processing:
  message:
    fetch:
      rate: 50

##### Vector Store ES #####
elasticsearch:
  host: localhost
  port: 9200
  username: elastic
  password: password

vectorstore:
  index:
    name: embeddings
  dimension:
    size: 1536

##### Document Assistant #####
documentAssistant:
  inference:
    maxResults: 20
    minScore: 0.7


